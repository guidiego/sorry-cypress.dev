{"version":3,"sources":["webpack:///../src/development.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,qMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,SADR,SAGA,yCACE,gBAAO,CACL,KAAQ,+CACR,WAAc,KAFhB,mBADF,oCAME,yBAAgB,CACd,WAAc,KADhB,QANF,2BAUA,iBAAQ,CACN,GAAM,wBADR,wBAGA,uEACE,yBAAgB,CACd,WAAc,KADhB,SADF,UAKA,uBAAK,mBAAU,CACX,WAAc,OADb,eAIL,iBAAQ,CACN,GAAM,wBADR,wBAGA,yCACE,yBAAgB,CACd,WAAc,KADhB,kBADF,+FAKA,iDACE,yBAAgB,CACd,WAAc,KADhB,kBADF,iCAKE,yBAAgB,CACd,WAAc,KADhB,YALF,QASE,yBAAgB,CACd,WAAc,KADhB,OATF,oBAaA,4BACE,yBAAgB,CACd,WAAc,KADhB,aADF,+FAKA,sBAEE,iBAAQ,CACN,WAAc,MADhB,OAGE,yBAAgB,CACd,WAAc,MADhB,wBAHF,sCASA,iBAAQ,CACN,WAAc,MADhB,OAGE,yBAAgB,CACd,WAAc,MADhB,qBAHF,2BASF,mEACA,sBAEE,iBAAQ,CACN,WAAc,MADhB,4BAGE,yBAAgB,CACd,WAAc,MADhB,UAKF,iBAAQ,CACN,WAAc,MACb,yBAAgB,CACf,WAAc,MADf,YAFH,oBAME,yBAAgB,CACd,WAAc,MADhB,SAKF,iBAAQ,CACN,WAAc,MACb,yBAAgB,CACf,WAAc,MADf,OAFH,eAME,yBAAgB,CACd,WAAc,MADhB,UAKJ,oGACE,yBAAgB,CACd,WAAc,KADhB,sBADF,UAKA,iBAAQ,CACN,GAAM,qBADR,qBAGA,sIACA,sBAEE,iBAAQ,CACN,WAAc,MADhB,sEAKF,sBAEE,iBAAQ,CACN,WAAc,MADhB,eAKA,iBAAQ,CACN,WAAc,MADhB,4BAKA,iBAAQ,CACN,WAAc,MADhB,sBAKA,iBAAQ,CACN,WAAc,MACb,yBAAgB,CACf,WAAc,MADf,iBAFH,8BAQF,iBAAQ,CACN,MAAS,GAGT,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,OAGE,yBAAgB,CACd,WAAc,KADhB,YAHF,gCAOE,yBAAgB,CACd,WAAc,KADhB,OAPF,mEAWE,yBAAgB,CACd,WAAc,KADhB,aAXF,YAeE,yBAAgB,CACd,WAAc,KADhB,SAfF,MAuBF,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,8DAGE,yBAAgB,CACd,WAAc,KADhB,SAHF,mCAWF,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,sGAGE,yBAAgB,CACd,WAAc,KADhB,aAOJ,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,0DAGE,yBAAgB,CACd,WAAc,KADhB,cAOJ,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,6FAOF,iBAAQ,CACN,WAAc,MAGd,gBAAO,CACL,WAAc,MADhB,wH,mMAWRH,EAAWI,gBAAiB","file":"component---src-development-mdx-33f9d0f695185b2e6814.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/sorry-cypress.dev/sorry-cypress.dev/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`The project uses `}\n      <a {...{\n        \"href\": \"https://yarnpkg.com/lang/en/docs/workspaces/\",\n        \"parentName\": \"p\"\n      }}>{`yarn workspaces`}</a>\n      {`. Install dependecies by running `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`yarn`}</inlineCode>\n      {` in the root directory.`}</p>\n    <h2 {...{\n      \"id\": \"services-development\"\n    }}>{`Services Development`}</h2>\n    <p>{`Use different terminals to run each package in `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`watch`}</inlineCode>\n      {` mode.`}</p>\n    <pre><code {...{\n        \"parentName\": \"pre\"\n      }}>{`yarn dev\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-docker-compose\"\n    }}>{`Using docker-compose`}</h2>\n    <p>{`The project uses `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`docker-compose`}</inlineCode>\n      {` to conveniently run backend services in dockerized containers, during development as well.`}</p>\n    <p>{`It is recommended to use `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`docker-compose`}</inlineCode>\n      {` to run the backend services (`}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`director`}</inlineCode>\n      {` and `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`api`}</inlineCode>\n      {`) in watch mode.`}</p>\n    <p>{`The `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`dashboard`}</inlineCode>\n      {` is less convenient to develop in a docker, it is more effective to run it on host machine.`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Run `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`docker-compose build`}</inlineCode>\n        {` from the project's root directory`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`Run `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`docker-compose up`}</inlineCode>\n        {` to start the services`}</li>\n\n    </ul>\n    <p>{`The latter command will create 3 services:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`MongoDB instance on port `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`27017`}</inlineCode></li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`director`}</inlineCode>\n        {` service on port `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`1234`}</inlineCode></li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`api`}</inlineCode>\n        {` service on `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`4000`}</inlineCode></li>\n\n    </ul>\n    <p>{`You can change the configuration using the environment variables defined in `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`docker-compose.yml`}</inlineCode>\n      {` file.`}</p>\n    <h2 {...{\n      \"id\": \"behind-the-scenes\"\n    }}>{`Behind the scenes`}</h2>\n    <p>{`API and Dashboard are straightforward GraphQL and ReactJS implementations. Director implements the next flow:`}</p>\n    <ol>\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>{`Each cypress agent (machine) sends the same initial request with:`}</li>\n\n    </ol>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`specs lists`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`machine hardware details`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`git commit details`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`--ci-build-id`}</inlineCode>\n        {` and other CLI parameters`}</li>\n\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`The `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`director`}</inlineCode>\n          {` fetches (or creates a new ) `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`run`}</inlineCode>\n          {` based on the parameters and responds with a randomly generated `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`machineId`}</inlineCode>\n          {` and the `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`runId`}</inlineCode>\n          {`.`}</p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Each cypress client requests a next available task for the `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`runId`}</inlineCode>\n          {` which was returned previously`}</p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`The service looks at the list of tests and returns next available test, marks the returned test as `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`claimed`}</inlineCode></p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Cypress agent runs the test and reports the results to `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`director`}</inlineCode></p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Director persists the results and return upload URLs for storing screenshots and videos.`}</p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`When there're no more available tests, director returns an \"empty\" response - cypress agent halts execution`}</p>\n\n      </li>\n\n    </ol>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}